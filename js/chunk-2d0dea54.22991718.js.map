{"version":3,"sources":["webpack:///./node_modules/three/examples/jsm/libs/inflate.module.min.js","webpack:///./node_modules/three/examples/jsm/curves/NURBSUtils.js","webpack:///./node_modules/three/examples/jsm/curves/NURBSCurve.js","webpack:///./node_modules/three/examples/jsm/loaders/FBXLoader.js"],"names":["mod","aa","c","d","e","a","split","b","execScript","length","shift","Uint8Array","Uint16Array","Uint32Array","DataView","f","g","h","k","m","n","p","s","x","Number","POSITIVE_INFINITY","Array","this","l","input","i","y","r","index","bufferSize","bufferType","resize","A","z","v","j","w","Error","B","t","prototype","set","subarray","ba","ca","D","S","T","U","u","M","F","q","V","E","slice","fa","G","H","I","J","K","L","da","ea","O","R","ga","Q","W","verify","ha","method","o","push","buffer","charCodeAt","Y","Z","$","ia","X","ADAPTIVE","BLOCK","Object","keys","Inflate","Zlib","NURBSUtils","findSpan","low","high","mid","Math","floor","calcBasisFunctions","span","N","left","right","saved","rv","lv","temp","calcBSplinePoint","P","C","point","Nj","wNj","calcBasisFunctionDerivatives","zeroArr","ders","ndu","s1","s2","rk","pk","j1","j2","calcBSplineDerivatives","nd","du","CK","nders","Pw","clone","multiplyScalar","add","calcKoverI","nom","denom","calcRationalCurveDerivatives","Pders","Aders","wders","sub","divideScalar","calcNURBSDerivatives","calcSurfacePoint","target","uspan","vspan","Nu","Nv","Sw","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","call","create","constructor","getPoint","optionalTarget","hpoint","getTangent","tangent","copy","normalize","fbxTree","connections","sceneGraph","FBXLoader","manager","FBXTreeParser","textureLoader","GeometryParser","AnimationParser","TextParser","BinaryParser","BinaryReader","littleEndian","dv","offset","undefined","FBXTree","isFbxFormatBinary","CORRECT","byteLength","convertArrayBufferToString","isFbxFormatASCII","text","cursor","read","result","num","getFbxVersion","versionRegExp","match","version","parseInt","convertFBXTimeToSeconds","time","assign","load","url","onLoad","onProgress","onError","scope","path","extractUrlBase","loader","setPath","setResponseType","setRequestHeader","requestHeader","parse","console","error","itemError","FBXBuffer","FBXText","resourcePath","setCrossOrigin","crossOrigin","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","parseScene","connectionMap","Map","rawConnections","Connections","forEach","rawConnection","fromID","toID","relationship","has","parents","children","parentRelationship","ID","get","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","image","parseImage","filename","pop","type","content","fileName","extension","lastIndexOf","toLowerCase","getHandler","warn","array","window","URL","createObjectURL","Blob","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","value","valueV","wrapS","wrapT","values","Scaling","repeat","currentPath","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","setValues","BumpFactor","bumpScale","Diffuse","color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","displacementMap","emissiveMap","normalMap","envMap","mapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","TransformLink","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","parentConnections","connection","parent","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","matrix","transform","generateTransform","applyMatrix4","animations","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","sanitizeNodeName","getTransformData","bone","subBone","matrixWorld","cameraAttribute","attr","NodeAttribute","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","setFocalLength","lightAttribute","LightType","Color","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","decay","angle","PI","InnerAngle","degToRad","penumbra","OuterAngle","max","CastShadows","castShadow","geometry","attributes","vertexColors","FBX_Deformer","skinning","normalizeSkinWeights","reduce","geo","linewidth","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","pos","position","lookAt","bindMatrices","parsePoseNodes","geoRelationships","geoConnParent","bind","BindPoseNode","Pose","poseNodes","PoseNode","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","isMesh","morphAttributes","setupMorphMaterial","uuid","matUuid","sharedMat","mat","clonedMat","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","vertex","setAttribute","colors","weightsIndices","vertexWeights","normal","normalMatrix","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","toString","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","UV","parseUVs","weightTable","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","data","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","KnotVector","pointsValues","Points","Form","curve","vertices","getPoints","positions","toArray","animationClips","rawClips","parseClips","key","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","times","KeyTime","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","decompose","setFromQuaternion","positionTrack","generateVectorTrack","rotationTrack","generateRotationTrack","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","interpolateRotations","setFromEuler","inverse","quaternion","euler","quaternionValues","premultiply","multiply","val","morphNum","getObjectByName","morphTargetDictionary","sort","elem","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","timeSpan","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","parentName","connProps","from","to","rest","append","parseNumberArray","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","skip","getUint32","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","inflate","reader2","decompress","nullByte","decodeText","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lParentTM","copyPosition","lParentGSM","getInverse","lGlobalRS","lParentLSM_inv","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2"],"mappings":"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","file":"js/chunk-2d0dea54.22991718.js","sourcesContent":["/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var mod={}, l=void 0,aa=mod;function r(c,d){var a=c.split(\".\"),b=aa;!(a[0]in b)&&b.execScript&&b.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)!a.length&&d!==l?b[e]=d:b=b[e]?b[e]:b[e]={}};var t=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function v(c){var d=c.length,a=0,b=Number.POSITIVE_INFINITY,e,f,g,h,k,m,n,p,s,x;for(p=0;p<d;++p)c[p]>a&&(a=c[p]),c[p]<b&&(b=c[p]);e=1<<a;f=new (t?Uint32Array:Array)(e);g=1;h=0;for(k=2;g<=a;){for(p=0;p<d;++p)if(c[p]===g){m=0;n=h;for(s=0;s<g;++s)m=m<<1|n&1,n>>=1;x=g<<16|p;for(s=m;s<e;s+=k)f[s]=x;++h}++g;h<<=1;k<<=1}return[f,a,b]};function w(c,d){this.g=[];this.h=32768;this.d=this.f=this.a=this.l=0;this.input=t?new Uint8Array(c):c;this.m=!1;this.i=y;this.r=!1;if(d||!(d={}))d.index&&(this.a=d.index),d.bufferSize&&(this.h=d.bufferSize),d.bufferType&&(this.i=d.bufferType),d.resize&&(this.r=d.resize);switch(this.i){case A:this.b=32768;this.c=new (t?Uint8Array:Array)(32768+this.h+258);break;case y:this.b=0;this.c=new (t?Uint8Array:Array)(this.h);this.e=this.z;this.n=this.v;this.j=this.w;break;default:throw Error(\"invalid inflate mode\");\n}}var A=0,y=1,B={t:A,s:y};\nw.prototype.k=function(){for(;!this.m;){var c=C(this,3);c&1&&(this.m=!0);c>>>=1;switch(c){case 0:var d=this.input,a=this.a,b=this.c,e=this.b,f=d.length,g=l,h=l,k=b.length,m=l;this.d=this.f=0;if(a+1>=f)throw Error(\"invalid uncompressed block header: LEN\");g=d[a++]|d[a++]<<8;if(a+1>=f)throw Error(\"invalid uncompressed block header: NLEN\");h=d[a++]|d[a++]<<8;if(g===~h)throw Error(\"invalid uncompressed block header: length verify\");if(a+g>d.length)throw Error(\"input buffer is broken\");switch(this.i){case A:for(;e+\ng>b.length;){m=k-e;g-=m;if(t)b.set(d.subarray(a,a+m),e),e+=m,a+=m;else for(;m--;)b[e++]=d[a++];this.b=e;b=this.e();e=this.b}break;case y:for(;e+g>b.length;)b=this.e({p:2});break;default:throw Error(\"invalid inflate mode\");}if(t)b.set(d.subarray(a,a+g),e),e+=g,a+=g;else for(;g--;)b[e++]=d[a++];this.a=a;this.b=e;this.c=b;break;case 1:this.j(ba,ca);break;case 2:for(var n=C(this,5)+257,p=C(this,5)+1,s=C(this,4)+4,x=new (t?Uint8Array:Array)(D.length),S=l,T=l,U=l,u=l,M=l,F=l,z=l,q=l,V=l,q=0;q<s;++q)x[D[q]]=\nC(this,3);if(!t){q=s;for(s=x.length;q<s;++q)x[D[q]]=0}S=v(x);u=new (t?Uint8Array:Array)(n+p);q=0;for(V=n+p;q<V;)switch(M=E(this,S),M){case 16:for(z=3+C(this,2);z--;)u[q++]=F;break;case 17:for(z=3+C(this,3);z--;)u[q++]=0;F=0;break;case 18:for(z=11+C(this,7);z--;)u[q++]=0;F=0;break;default:F=u[q++]=M}T=t?v(u.subarray(0,n)):v(u.slice(0,n));U=t?v(u.subarray(n)):v(u.slice(n));this.j(T,U);break;default:throw Error(\"unknown BTYPE: \"+c);}}return this.n()};\nvar G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],D=t?new Uint16Array(G):G,H=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],I=t?new Uint16Array(H):H,J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],K=t?new Uint8Array(J):J,L=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],da=t?new Uint16Array(L):L,ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,\n13,13],N=t?new Uint8Array(ea):ea,O=new (t?Uint8Array:Array)(288),P,fa;P=0;for(fa=O.length;P<fa;++P)O[P]=143>=P?8:255>=P?9:279>=P?7:8;var ba=v(O),Q=new (t?Uint8Array:Array)(30),R,ga;R=0;for(ga=Q.length;R<ga;++R)Q[R]=5;var ca=v(Q);function C(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h;b<d;){if(f>=g)throw Error(\"input buffer is broken\");a|=e[f++]<<b;b+=8}h=a&(1<<d)-1;c.f=a>>>d;c.d=b-d;c.a=f;return h}\nfunction E(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h=d[0],k=d[1],m,n;b<k&&!(f>=g);)a|=e[f++]<<b,b+=8;m=h[a&(1<<k)-1];n=m>>>16;if(n>b)throw Error(\"invalid code length: \"+n);c.f=a>>n;c.d=b-n;c.a=f;return m&65535}\nw.prototype.j=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length-258,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(this.b=b,a=this.e(),b=this.b),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b>=e&&(this.b=b,a=this.e(),b=this.b);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.w=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(a=this.e(),e=a.length),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b+k>e&&(a=this.e(),e=a.length);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.e=function(){var c=new (t?Uint8Array:Array)(this.b-32768),d=this.b-32768,a,b,e=this.c;if(t)c.set(e.subarray(32768,c.length));else{a=0;for(b=c.length;a<b;++a)c[a]=e[a+32768]}this.g.push(c);this.l+=c.length;if(t)e.set(e.subarray(d,d+32768));else for(a=0;32768>a;++a)e[a]=e[d+a];this.b=32768;return e};\nw.prototype.z=function(c){var d,a=this.input.length/this.a+1|0,b,e,f,g=this.input,h=this.c;c&&(\"number\"===typeof c.p&&(a=c.p),\"number\"===typeof c.u&&(a+=c.u));2>a?(b=(g.length-this.a)/this.o[2],f=258*(b/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*a;t?(d=new Uint8Array(e),d.set(h)):d=h;return this.c=d};\nw.prototype.n=function(){var c=0,d=this.c,a=this.g,b,e=new (t?Uint8Array:Array)(this.l+(this.b-32768)),f,g,h,k;if(0===a.length)return t?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);f=0;for(g=a.length;f<g;++f){b=a[f];h=0;for(k=b.length;h<k;++h)e[c++]=b[h]}f=32768;for(g=this.b;f<g;++f)e[c++]=d[f];this.g=[];return this.buffer=e};\nw.prototype.v=function(){var c,d=this.b;t?this.r?(c=new Uint8Array(d),c.set(this.c.subarray(0,d))):c=this.c.subarray(0,d):(this.c.length>d&&(this.c.length=d),c=this.c);return this.buffer=c};function W(c,d){var a,b;this.input=c;this.a=0;if(d||!(d={}))d.index&&(this.a=d.index),d.verify&&(this.A=d.verify);a=c[this.a++];b=c[this.a++];switch(a&15){case ha:this.method=ha;break;default:throw Error(\"unsupported compression method\");}if(0!==((a<<8)+b)%31)throw Error(\"invalid fcheck flag:\"+((a<<8)+b)%31);if(b&32)throw Error(\"fdict flag is not supported\");this.q=new w(c,{index:this.a,bufferSize:d.bufferSize,bufferType:d.bufferType,resize:d.resize})}\nW.prototype.k=function(){var c=this.input,d,a;d=this.q.k();this.a=this.q.a;if(this.A){a=(c[this.a++]<<24|c[this.a++]<<16|c[this.a++]<<8|c[this.a++])>>>0;var b=d;if(\"string\"===typeof b){var e=b.split(\"\"),f,g;f=0;for(g=e.length;f<g;f++)e[f]=(e[f].charCodeAt(0)&255)>>>0;b=e}for(var h=1,k=0,m=b.length,n,p=0;0<m;){n=1024<m?1024:m;m-=n;do h+=b[p++],k+=h;while(--n);h%=65521;k%=65521}if(a!==(k<<16|h)>>>0)throw Error(\"invalid adler-32 checksum\");}return d};var ha=8;r(\"Zlib.Inflate\",W);r(\"Zlib.Inflate.prototype.decompress\",W.prototype.k);var X={ADAPTIVE:B.s,BLOCK:B.t},Y,Z,$,ia;if(Object.keys)Y=Object.keys(X);else for(Z in Y=[],$=0,X)Y[$++]=Z;$=0;for(ia=Y.length;$<ia;++$)Z=Y[$],r(\"Zlib.Inflate.BufferType.\"+Z,X[Z]);\nvar Inflate=mod.Zlib.Inflate;\nexport { Inflate }\n","import {\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\nvar NURBSUtils = {\n\n\t/*\n\tFinds knot vector span.\n\n\tp : degree\n\tu : parametric value\n\tU : knot vector\n\n\treturns the span\n\t*/\n\tfindSpan: function ( p, u, U ) {\n\n\t\tvar n = U.length - p - 1;\n\n\t\tif ( u >= U[ n ] ) {\n\n\t\t\treturn n - 1;\n\n\t\t}\n\n\t\tif ( u <= U[ p ] ) {\n\n\t\t\treturn p;\n\n\t\t}\n\n\t\tvar low = p;\n\t\tvar high = n;\n\t\tvar mid = Math.floor( ( low + high ) / 2 );\n\n\t\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\t\tif ( u < U[ mid ] ) {\n\n\t\t\t\thigh = mid;\n\n\t\t\t} else {\n\n\t\t\t\tlow = mid;\n\n\t\t\t}\n\n\t\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t\t}\n\n\t\treturn mid;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tU    : knot vector\n\n\treturns array[p+1] with basis functions values.\n\t*/\n\tcalcBasisFunctions: function ( span, u, p, U ) {\n\n\t\tvar N = [];\n\t\tvar left = [];\n\t\tvar right = [];\n\t\tN[ 0 ] = 1.0;\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tvar temp = N[ r ] / ( rv + lv );\n\t\t\t\tN[ r ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t }\n\n\t\t\t N[ j ] = saved;\n\n\t\t }\n\n\t\t return N;\n\n\t},\n\n\n\t/*\n\tCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\n\tp : degree of B-Spline\n\tU : knot vector\n\tP : control points (x, y, z, w)\n\tu : parametric point\n\n\treturns point for given u\n\t*/\n\tcalcBSplinePoint: function ( p, U, P, u ) {\n\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar N = this.calcBasisFunctions( span, u, p, U );\n\t\tvar C = new Vector4( 0, 0, 0, 0 );\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tvar point = P[ span - p + j ];\n\t\t\tvar Nj = N[ j ];\n\t\t\tvar wNj = point.w * Nj;\n\t\t\tC.x += point.x * wNj;\n\t\t\tC.y += point.y * wNj;\n\t\t\tC.z += point.z * wNj;\n\t\t\tC.w += point.w * Nj;\n\n\t\t}\n\n\t\treturn C;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tn    : number of derivatives to calculate\n\tU    : knot vector\n\n\treturns array[n+1][p+1] with basis functions derivatives\n\t*/\n\tcalcBasisFunctionDerivatives: function ( span, u, p, n, U ) {\n\n\t\tvar zeroArr = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tzeroArr[ i ] = 0.0;\n\n\t\tvar ders = [];\n\t\tfor ( var i = 0; i <= n; ++ i )\n\t\t\tders[ i ] = zeroArr.slice( 0 );\n\n\t\tvar ndu = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\t\tndu[ 0 ][ 0 ] = 1.0;\n\n\t\tvar left = zeroArr.slice( 0 );\n\t\tvar right = zeroArr.slice( 0 );\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\t\tvar temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t}\n\n\t\t\tndu[ j ][ j ] = saved;\n\n\t\t}\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t\t}\n\n\t\tfor ( var r = 0; r <= p; ++ r ) {\n\n\t\t\tvar s1 = 0;\n\t\t\tvar s2 = 1;\n\n\t\t\tvar a = [];\n\t\t\tfor ( var i = 0; i <= p; ++ i ) {\n\n\t\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t\t}\n\n\t\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\t\tvar d = 0.0;\n\t\t\t\tvar rk = r - k;\n\t\t\t\tvar pk = p - k;\n\n\t\t\t\tif ( r >= k ) {\n\n\t\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tvar j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\t\tvar j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\t\tfor ( var j = j1; j <= j2; ++ j ) {\n\n\t\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( r <= pk ) {\n\n\t\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tders[ k ][ r ] = d;\n\n\t\t\t\tvar j = s1;\n\t\t\t\ts1 = s2;\n\t\t\t\ts2 = j;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar r = p;\n\n\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\t\tders[ k ][ j ] *= r;\n\n\t\t\t}\n\n\t\t\tr *= p - k;\n\n\t\t}\n\n\t\treturn ders;\n\n\t},\n\n\n\t/*\n\t\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\t\tp  : degree\n\t\tU  : knot vector\n\t\tP  : control points\n\t\tu  : Parametric points\n\t\tnd : number of derivatives\n\n\t\treturns array[d+1] with derivatives\n\t\t*/\n\tcalcBSplineDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar du = nd < p ? nd : p;\n\t\tvar CK = [];\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar nders = this.calcBasisFunctionDerivatives( span, u, p, du, U );\n\t\tvar Pw = [];\n\n\t\tfor ( var i = 0; i < P.length; ++ i ) {\n\n\t\t\tvar point = P[ i ].clone();\n\t\t\tvar w = point.w;\n\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\n\t\t\tPw[ i ] = point;\n\n\t\t}\n\n\t\tfor ( var k = 0; k <= du; ++ k ) {\n\n\t\t\tvar point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = point;\n\n\t\t}\n\n\t\tfor ( var k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate \"K over I\"\n\n\treturns k!/(i!(k-i)!)\n\t*/\n\tcalcKoverI: function ( k, i ) {\n\n\t\tvar nom = 1;\n\n\t\tfor ( var j = 2; j <= k; ++ j ) {\n\n\t\t\tnom *= j;\n\n\t\t}\n\n\t\tvar denom = 1;\n\n\t\tfor ( var j = 2; j <= i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\tfor ( var j = 2; j <= k - i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\treturn nom / denom;\n\n\t},\n\n\n\t/*\n\tCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\n\tPders : result of function calcBSplineDerivatives\n\n\treturns array with derivatives for rational curve.\n\t*/\n\tcalcRationalCurveDerivatives: function ( Pders ) {\n\n\t\tvar nd = Pders.length;\n\t\tvar Aders = [];\n\t\tvar wders = [];\n\n\t\tfor ( var i = 0; i < nd; ++ i ) {\n\n\t\t\tvar point = Pders[ i ];\n\t\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\t\twders[ i ] = point.w;\n\n\t\t}\n\n\t\tvar CK = [];\n\n\t\tfor ( var k = 0; k < nd; ++ k ) {\n\n\t\t\tvar v = Aders[ k ].clone();\n\n\t\t\tfor ( var i = 1; i <= k; ++ i ) {\n\n\t\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( this.calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points in homogeneous space\n\tu  : parametric points\n\tnd : number of derivatives\n\n\treturns array with derivatives.\n\t*/\n\tcalcNURBSDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar Pders = this.calcBSplineDerivatives( p, U, P, u, nd );\n\t\treturn this.calcRationalCurveDerivatives( Pders );\n\n\t},\n\n\n\t/*\n\tCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\n\tp1, p2 : degrees of B-Spline surface\n\tU1, U2 : knot vectors\n\tP      : control points (x, y, z, w)\n\tu, v   : parametric values\n\n\treturns point for given (u, v)\n\t*/\n\tcalcSurfacePoint: function ( p, q, U, V, P, u, v, target ) {\n\n\t\tvar uspan = this.findSpan( p, u, U );\n\t\tvar vspan = this.findSpan( q, v, V );\n\t\tvar Nu = this.calcBasisFunctions( uspan, u, p, U );\n\t\tvar Nv = this.calcBasisFunctions( vspan, v, q, V );\n\t\tvar temp = [];\n\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( var k = 0; k <= p; ++ k ) {\n\n\t\t\t\tvar point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\t\tvar w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar Sw = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\n\t\tSw.divideScalar( Sw.w );\n\t\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n\t}\n\n};\n\nexport { NURBSUtils };\n","import {\n\tCurve,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nvar NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\n\n\tCurve.call( this );\n\n\tthis.degree = degree;\n\tthis.knots = knots;\n\tthis.controlPoints = [];\n\t// Used by periodic NURBS to remove hidden spans\n\tthis.startKnot = startKnot || 0;\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t// ensure Vector4 for control points\n\t\tvar point = controlPoints[ i ];\n\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t}\n\n};\n\n\nNURBSCurve.prototype = Object.create( Curve.prototype );\nNURBSCurve.prototype.constructor = NURBSCurve;\n\n\nNURBSCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t// following results in (wx, wy, wz, w) homogeneous point\n\tvar hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\tif ( hpoint.w != 1.0 ) {\n\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\thpoint.divideScalar( hpoint.w );\n\n\t}\n\n\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n};\n\n\nNURBSCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\tvar tangent = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\tvar ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\ttangent.copy( ders[ 1 ] ).normalize();\n\n\treturn tangent;\n\n};\n\nexport { NURBSCurve };\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\nimport { Inflate } from \"../libs/inflate.module.min.js\";\nimport { NURBSCurve } from \"../curves/NURBSCurve.js\";\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nvar FBXLoader = ( function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFBXLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FBXLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( scope.requestHeader );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( FBXBuffer, path ) {\n\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t\t}\n\n\t\t\t// console.log( fbxTree );\n\n\t\t\tvar textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t\t}\n\n\t} );\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\n\tfunction FBXTreeParser( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures( images );\n\t\t\tvar materials = this.parseMaterials( textures );\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\n\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\n\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor ( var nodeID in videoNodes ) {\n\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\n\n\t\t\t\t\tvar id = parseInt( nodeID );\n\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var id in images ) {\n\n\t\t\t\tvar filename = images[ id ];\n\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function ( videoNode ) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array( content );\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function ( images ) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor ( var nodeID in textureNodes ) {\n\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function ( textureNode, images ) {\n\n\t\t\tvar texture = this.loadTexture( textureNode, images );\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\t\tloadTexture: function ( textureNode, images ) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get( textureNode.id ).children;\n\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\t\tif ( extension === 'tga' ) {\n\n\t\t\t\tvar loader = this.manager.getHandler( '.tga' );\n\n\t\t\t\tif ( loader === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t\t}\n\n\t\t\t} else if ( extension === 'psd' ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath( currentPath );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function ( textureMap ) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor ( var nodeID in materialNodes ) {\n\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function ( materialNode, textureMap ) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif ( typeof type === 'object' ) {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\t\tvar material;\n\n\t\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues( parameters );\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Diffuse ) {\n\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\n\n\t\t\t} else if ( materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Emissive ) {\n\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\n\n\t\t\t} else if ( materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Opacity ) {\n\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t\t}\n\n\t\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Shininess ) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Specular ) {\n\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\n\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function ( textureMap, id ) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get( id );\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\n\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push( rawBone );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\t\tvar child = relationships.children[ i ];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main Group() to be returned by the loader\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\n\n\t\t\tsceneGraph = new Group();\n\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar scope = this;\n\t\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\n\t\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\n\n\t\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( model.parent === null ) {\n\n\t\t\t\t\tsceneGraph.add( model );\n\n\t\t\t\t}\n\n\n\t\t\t} );\n\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\t\tif ( node.parent ) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n\t\t\t\t\tvar transform = generateTransform( node.userData.transformData );\n\n\t\t\t\t\tnode.applyMatrix4( transform );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor ( var nodeID in modelNodes ) {\n\n\t\t\t\tvar id = parseInt( nodeID );\n\t\t\t\tvar node = modelNodes[ nodeID ];\n\t\t\t\tvar relationships = connections.get( id );\n\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.getTransformData( model, node );\n\t\t\t\tmodelMap.set( id, model );\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a PerspectiveCamera or OrthographicCamera\n\t\tcreateCamera: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a DirectionalLight, PointLight or SpotLight\n\t\tcreateLight: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( lightAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( materials.length > 1 ) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if ( materials.length > 0 ) {\n\n\t\t\t\tmaterial = materials[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\t\tmaterials.push( material );\n\n\t\t\t}\n\n\t\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t} );\n\n\t\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\t\tmodel.normalizeSkinWeights();\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function ( relationships, geometryMap ) {\n\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null );\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\t\treturn new Line( geometry, material );\n\n\t\t},\n\n\t\t// parse the model node for transform data\n\t\tgetTransformData: function ( model, modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\t\tmodel.userData.transformData = transformData;\n\n\t\t},\n\n\t\tsetLookAtProperties: function ( model, modelNode ) {\n\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\t\tvar children = connections.get( model.ID ).children;\n\n\t\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\n\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[ 0 ];\n\t\t\t\tvar g = ambientColor[ 1 ];\n\t\t\t\tvar b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tvar color = new Color( r, g, b );\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tvar scope = this;\n\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\tif ( child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length ) {\n\n\t\t\t\t\t\tif ( Array.isArray( child.material ) ) {\n\n\t\t\t\t\t\t\tchild.material.forEach( function ( material, i ) {\n\n\t\t\t\t\t\t\t\tscope.setupMorphMaterial( child, material, i );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tscope.setupMorphMaterial( child, child.material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t\tsetupMorphMaterial: function ( child, material, index ) {\n\n\t\t\tvar uuid = child.uuid;\n\t\t\tvar matUuid = material.uuid;\n\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\tvar sharedMat = false;\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.isMesh ) {\n\n\t\t\t\t\tif ( Array.isArray( node.material ) ) {\n\n\t\t\t\t\t\tnode.material.forEach( function ( mat ) {\n\n\t\t\t\t\t\t\tif ( mat.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else if ( node.material.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( sharedMat === true ) {\n\n\t\t\t\tvar clonedMat = material.clone();\n\t\t\t\tclonedMat.morphTargets = true;\n\n\t\t\t\tif ( index === undefined ) child.material = clonedMat;\n\t\t\t\telse child.material[ index ] = clonedMat;\n\n\t\t\t} else material.morphTargets = true;\n\n\t\t}\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() {}\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function ( deformers ) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor ( var nodeID in geoNodes ) {\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tswitch ( geoNode.attrType ) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = [];\n\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t\t} );\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif ( modelNodes.length === 0 ) return;\n\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null );\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// Assume one model and get the preRotation from that\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\t\tvar modelNode = modelNodes[ 0 ];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t\t},\n\n\t\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function ( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\t\tvar geo = new BufferGeometry();\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\t\tvar buffers = this.genBuffers( geoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\t\tvar normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t\t} );\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function ( geoInfo ) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar scope = this;\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t\t} );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength ++;\n\n\t\t\t\tif ( endOfFace ) {\n\n\t\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\t\tpolygonIndex ++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\t\tif ( morphTargets.length === 0 ) return;\n\n\t\t\tparentGeo.morphTargetsRelative = true;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\t\tvar scope = this;\n\t\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\tvar morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\n\t\t\tvar morphPositions = new Float32Array( length );\n\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\n\n\t\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: morphPositions,\n\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function ( NormalNode ) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function ( UVNode ) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function ( ColorNode ) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function ( MaterialNode ) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [ 0 ],\n\t\t\t\t\tindices: [ 0 ],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\t\tmaterialIndices.push( i );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function ( geoNode ) {\n\n\t\t\tif ( NURBSCurve === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt( geoNode.Order );\n\n\t\t\tif ( isNaN( order ) ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\n\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\n\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\n\n\t\t\tvertices.forEach( function ( vertex, i ) {\n\n\t\t\t\tvertex.toArray( positions, i * 3 );\n\n\t\t\t} );\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() {}\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif ( rawClips !== undefined ) {\n\n\t\t\t\tfor ( var key in rawClips ) {\n\n\t\t\t\t\tvar rawClip = rawClips[ key ];\n\n\t\t\t\t\tvar clip = this.addClip( rawClip );\n\n\t\t\t\t\tanimationClips.push( clip );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor ( var nodeID in rawCurves ) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\n\n\t\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor ( var nodeID in rawLayers ) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\t\tparseAnimStacks: function ( layersMap ) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor ( var nodeID in rawStacks ) {\n\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function ( rawClip ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar scope = this;\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t\t} );\n\n\t\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t\t},\n\n\t\tgenerateTracks: function ( rawTracks ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new Vector3();\n\t\t\tvar initialRotation = new Quaternion();\n\t\t\tvar initialScale = new Vector3();\n\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t\t},\n\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\t\tif ( curves.x !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.x );\n\t\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tif ( curves.y !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.y );\n\t\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tif ( curves.z !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.z );\n\t\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\tif ( preRotation !== undefined ) {\n\n\t\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t\t}\n\n\t\t\tif ( postRotation !== undefined ) {\n\n\t\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).inverse();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar euler = new Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\n\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t\t}\n\n\t\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t\t},\n\n\t\tgenerateMorphTrack: function ( rawTracks ) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map( function ( val ) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t} );\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function ( curves ) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t} ).filter( function ( elem, index, array ) {\n\n\t\t\t\treturn array.indexOf( elem ) == index;\n\n\t\t\t} );\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach( function ( time ) {\n\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\n\t\t\t\t\tvalues.push( xValue );\n\t\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\n\t\t\t\t\tvalues.push( yValue );\n\t\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\n\t\t\t\t\tvalues.push( zValue );\n\t\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function ( curve ) {\n\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() {}\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function ( node ) {\n\n\t\t\tthis.nodeStack.push( node );\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function ( val, name ) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tthis.currentIndent = 0;\n\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar scope = this;\n\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\n\n\t\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\t\tif ( matchBeginning ) {\n\n\t\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\t\tscope.popStack();\n\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function ( line, property ) {\n\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\t} );\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\t\tthis.pushStack( node );\n\n\t\t},\n\n\t\tparseNodeAttr: function ( attrs ) {\n\n\t\t\tvar id = attrs[ 0 ];\n\n\t\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif ( attrs.length > 1 ) {\n\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\t\ttype = attrs[ 2 ];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\n\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif ( propName === 'C' ) {\n\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\n\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t\t} );\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [ from, to ];\n\t\t\t\tappend( propValue, rest );\n\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t\t} else {\n\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function ( line ) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t\t} );\n\n\t\t\tvar innerPropName = props[ 0 ];\n\t\t\tvar innerPropType1 = props[ 1 ];\n\t\t\tvar innerPropType2 = props[ 2 ];\n\t\t\tvar innerPropFlag = props[ 3 ];\n\t\t\tvar innerPropValue = props[ 4 ];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch ( innerPropType1 ) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() {}\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function ( buffer ) {\n\n\t\t\tvar reader = new BinaryReader( buffer );\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tif ( version < 6400 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t\t}\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\t\tvar node = this.parseNode( reader, version );\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function ( reader ) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function ( reader, version ) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString( nameLen );\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif ( endOffset === 0 ) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\n\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\t\tvar subNode = this.parseNode( reader, version );\n\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif ( typeof id === 'number' ) node.id = id;\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\t\tif ( name !== '' ) node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function ( name, node, subNode ) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\n\n\t\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push( array );\n\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\t\tvar keys = Object.keys( subNode );\n\n\t\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function ( reader ) {\n\n\t\t\tvar type = reader.getString( 1 );\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString( length );\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof Inflate === 'undefined' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function ( length ) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getBoolean() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8( this.offset );\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif ( high & 0x80000000 ) {\n\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function ( size ) {\n\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function ( size ) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta[ i ] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf( 0 );\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() {}\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function ( key, val ) {\n\n\t\t\tthis[ key ] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary( buffer ) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n\t}\n\n\tfunction isFbxFormatASCII( text ) {\n\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read( offset ) {\n\n\t\t\tvar result = text[ offset - 1 ];\n\t\t\ttext = text.slice( cursor + offset );\n\t\t\tcursor ++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\n\n\t\t\tvar num = read( 1 );\n\t\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion( text ) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match( versionRegExp );\n\n\t\tif ( match ) {\n\n\t\t\tvar version = parseInt( match[ 1 ] );\n\t\t\treturn version;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds( time ) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\t\tvar index;\n\n\t\tswitch ( infoObject.mappingType ) {\n\n\t\t\tcase 'ByPolygonVertex' :\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon' :\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice' :\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame' :\n\t\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t\t}\n\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\n\n\t}\n\n\tvar tempEuler = new Euler();\n\tvar tempVec = new Vector3();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n\tfunction generateTransform( transformData ) {\n\n\t\tvar lTranslationM = new Matrix4();\n\t\tvar lPreRotationM = new Matrix4();\n\t\tvar lRotationM = new Matrix4();\n\t\tvar lPostRotationM = new Matrix4();\n\n\t\tvar lScalingM = new Matrix4();\n\t\tvar lScalingPivotM = new Matrix4();\n\t\tvar lScalingOffsetM = new Matrix4();\n\t\tvar lRotationOffsetM = new Matrix4();\n\t\tvar lRotationPivotM = new Matrix4();\n\n\t\tvar lParentGX = new Matrix4();\n\t\tvar lGlobalT = new Matrix4();\n\n\t\tvar inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\t\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\t\tif ( transformData.preRotation ) {\n\n\t\t\tvar array = transformData.preRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.rotation ) {\n\n\t\t\tvar array = transformData.rotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.postRotation ) {\n\n\t\t\tvar array = transformData.postRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t\t// Pivots and offsets\n\t\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\t\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\t\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\t\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t\t// parent transform\n\t\tif ( transformData.parentMatrixWorld ) lParentGX = transformData.parentMatrixWorld;\n\n\t\t// Global Rotation\n\t\tvar lLRM = lPreRotationM.multiply( lRotationM ).multiply( lPostRotationM );\n\t\tvar lParentGRM = new Matrix4();\n\t\tlParentGX.extractRotation( lParentGRM );\n\n\t\t// Global Shear*Scaling\n\t\tvar lParentTM = new Matrix4();\n\t\tlParentTM.copyPosition( lParentGX );\n\n\t\tvar lParentGSM = new Matrix4();\n\t\tlParentGSM.getInverse( lParentGRM ).multiply( lParentGX );\n\n\t\tvar lGlobalRS = new Matrix4();\n\n\t\tif ( inheritType === 0 ) {\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lScalingM );\n\n\t\t} else if ( inheritType === 1 ) {\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lScalingM );\n\n\t\t} else {\n\n\t\t\tvar lParentLSM_inv = new Matrix4().getInverse( lScalingM );\n\t\t\tvar lParentGSM_noLocal = new Matrix4().multiply( lParentGSM ).multiply( lParentLSM_inv );\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lScalingM );\n\n\t\t}\n\n\t\tvar lRotationPivotM_inv = new Matrix4().getInverse( lRotationPivotM );\n\t\tvar lScalingPivotM_inv = new Matrix4().getInverse( lScalingPivotM );\n\t\t// Calculate the local transform matrix\n\t\tvar lTransform = new Matrix4();\n\t\tlTransform.copy( lTranslationM ).multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\t\tvar lGlobalTranslation = new Matrix4().copy( lParentGX ).multiply( lLocalTWithAllPivotAndOffsetInfo );\n\t\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\t\tlTransform = new Matrix4().multiply( lGlobalT ).multiply( lGlobalRS );\n\n\t\treturn lTransform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder( order ) {\n\n\t\torder = order || 0;\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif ( order === 6 ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\t\treturn enums[ 0 ];\n\n\t\t}\n\n\t\treturn enums[ order ];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray( value ) {\n\n\t\tvar array = value.split( ',' ).map( function ( val ) {\n\n\t\t\treturn parseFloat( val );\n\n\t\t} );\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString( buffer, from, to ) {\n\n\t\tif ( from === undefined ) from = 0;\n\t\tif ( to === undefined ) to = buffer.byteLength;\n\n\t\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n\t}\n\n\tfunction append( a, b ) {\n\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\tfunction slice( a, b, from, to ) {\n\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject( a1, index, a2 ) {\n\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n\t}\n\n\treturn FBXLoader;\n\n} )();\n\nexport { FBXLoader };\n"],"sourceRoot":""}