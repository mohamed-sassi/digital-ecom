{"version":3,"sources":["webpack:///./node_modules/three/examples/jsm/loaders/GLTFLoader.js"],"names":["GLTFLoader","manager","call","this","dracoLoader","ddsLoader","ktx2Loader","pluginCallbacks","register","parser","GLTFMaterialsClearcoatExtension","GLTFTextureBasisUExtension","GLTFMaterialsTransmissionExtension","GLTFRegistry","objects","get","key","add","object","remove","removeAll","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","setPath","setResponseType","setRequestHeader","requestHeader","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","setKTX2Loader","callback","indexOf","push","unregister","splice","content","extensions","plugins","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","undefined","asset","version","Error","GLTFParser","fileLoader","i","length","plugin","name","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","warn","setExtensions","setPlugins","KHR_MATERIALS_CLEARCOAT","KHR_MATERIALS_TRANSMISSION","KHR_TEXTURE_BASISU","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","fromArray","range","type","target","position","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","extendMaterialParams","materialIndex","materials","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","scale","clearcoatNormalScale","transmissionFactor","transmission","transmissionTexture","loadTexture","textureIndex","textureDef","textures","source","images","options","loadTextureImage","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","repeat","texCoord","needsUpdate","copy","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","resolveURL","test","createDefaultMaterial","cache","transparent","depthTest","side","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","il","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","geometryKey","dracoExtension","indices","createAttributesKey","mode","attributesKey","keys","sort","associations","Map","primitiveCache","meshCache","refs","uses","cameraCache","lightCache","createImageBitmap","navigator","userAgent","textureLoader","setCrossOrigin","computeBounds","box","accessor","min","max","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","addPrimitiveAttributes","assignAttributeAccessor","accessorIndex","setAttribute","gltfAttributeName","setIndex","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","getX","newGeometry","_markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","_addNodeRef","skin","isSkinnedMesh","camera","light","_getNodeRef","ref","_invokeOne","func","_invokeAll","unshift","cacheKey","dependency","loadScene","loadNode","ext","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureExtensions","getHandler","URL","self","webkitURL","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","isImageBitmapLoader","imageBitmap","revokeObjectURL","flipY","format","samplers","sampler","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","gltfReference","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","y","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","alphaMode","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","loadGeometries","primitives","createDracoPrimitive","geometryPromise","cached","promise","meshIndex","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","matrixAutoUpdate","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","o","sanitizeNodeName","matrix","applyMatrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","matrixWorld","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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","file":"js/chunk-2d0b9f3a.f1d36e73.js","sourcesContent":["import {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tCanvasTexture,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tImageBitmapLoader,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternionKeyframeTrack,\n\tRGBAFormat,\n\tRGBFormat,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTangentSpaceNormalMap,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\t\tthis.ktx2Loader = null;\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( parser );\n\n\t\t} );\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureBasisUExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( parser );\n\n\t\t} );\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetKTX2Loader: function ( ktx2Loader ) {\n\n\t\t\tthis.ktx2Loader = ktx2Loader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\t\t\tvar plugins = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager,\n\t\t\t\tktx2Loader: this.ktx2Loader\n\n\t\t\t} );\n\n\t\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\n\t\t\tfor ( var i = 0; i < this.pluginCallbacks.length; i ++ ) {\n\n\t\t\t\tvar plugin = this.pluginCallbacks[ i ]( parser );\n\t\t\t\tplugins[ plugin.name ] = plugin;\n\n\t\t\t\t// Workaround to avoid determining as unknown extension\n\t\t\t\t// in addUnknownExtensionsToUserData().\n\t\t\t\t// Remove this workaround if we move all the existing\n\t\t\t\t// extension handlers to plugin system\n\t\t\t\textensions[ plugin.name ] = true;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 && plugins[ extensionName ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.setExtensions( extensions );\n\t\t\tparser.setPlugins( plugins );\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_TRANSMISSION: 'KHR_materials_transmission',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_BASISU: 'KHR_texture_basisu',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendMaterialParams = function ( materialIndex, materialParams ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Transmission Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n\t * Draft: https://github.com/KhronosGroup/glTF/pull/1698\n\t */\n\tfunction GLTFMaterialsTransmissionExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_TRANSMISSION;\n\n\t}\n\n\tGLTFMaterialsTransmissionExtension.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsTransmissionExtension.prototype.extendMaterialParams = function ( materialIndex, materialParams ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.transmissionFactor !== undefined ) {\n\n\t\t\tmaterialParams.transmission = extension.transmissionFactor;\n\n\t\t}\n\n\t\tif ( extension.transmissionTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'transmissionMap', extension.transmissionTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * BasisU Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n\t * (draft PR https://github.com/KhronosGroup/glTF/pull/1751)\n\t */\n\tfunction GLTFTextureBasisUExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_BASISU;\n\n\t}\n\n\tGLTFTextureBasisUExtension.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this.parser;\n\t\tvar json = parser.json;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ this.name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar extension = textureDef.extensions[ this.name ];\n\t\tvar source = json.images[ extension.source ];\n\t\tvar loader = parser.options.ktx2Loader;\n\n\t\tif ( ! loader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures' );\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, source, loader );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = {};\n\t\tthis.plugins = {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\t// Object3D instance caches\n\t\tthis.meshCache = { refs: {}, uses: {} };\n\t\tthis.cameraCache = { refs: {}, uses: {} };\n\t\tthis.lightCache = { refs: {}, uses: {} };\n\n\t\t// Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n\t\t// expensive work of uploading a texture to the GPU off the main thread.\n\t\tif ( typeof createImageBitmap !== 'undefined' && /Firefox/.test( navigator.userAgent ) === false ) {\n\n\t\t\tthis.textureLoader = new ImageBitmapLoader( this.options.manager );\n\n\t\t} else {\n\n\t\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\n\t\t}\n\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.setExtensions = function ( extensions ) {\n\n\t\tthis.extensions = extensions;\n\n\t};\n\n\tGLTFParser.prototype.setPlugins = function ( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t};\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis._markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype._markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Iterate over all nodes, marking references to shared resources,\n\t\t// as well as skeleton joints.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.meshCache, nodeDef.mesh );\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.cameraCache, nodeDef.camera );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.lightCache, nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Counts references to shared node / Object3D resources. These resources\n\t * can be reused, or \"instantiated\", at multiple nodes in the scene\n\t * hierarchy. Mesh, Camera, and Light instances are instantiated and must\n\t * be marked. Non-scenegraph resources (like Materials, Geometries, and\n\t * Textures) can be reused directly and are not marked here.\n\t *\n\t * Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t */\n\tGLTFParser.prototype._addNodeRef = function ( cache, index ) {\n\n\t\tif ( index === undefined ) return;\n\n\t\tif ( cache.refs[ index ] === undefined ) {\n\n\t\t\tcache.refs[ index ] = cache.uses[ index ] = 0;\n\n\t\t}\n\n\t\tcache.refs[ index ] ++;\n\n\t};\n\n\t/** Returns a reference to a shared resource, cloning it if necessary. */\n\tGLTFParser.prototype._getNodeRef = function ( cache, index, object ) {\n\n\t\tif ( cache.refs[ index ] <= 1 ) return object;\n\n\t\tvar ref = object.clone();\n\n\t\tref.name += '_instance_' + ( cache.uses[ index ] ++ );\n\n\t\treturn ref;\n\n\t};\n\n\tGLTFParser.prototype._invokeOne = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.push( this );\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tvar result = func( extensions[ i ] );\n\n\t\t\tif ( result ) return result;\n\n\t\t}\n\n\t};\n\n\tGLTFParser.prototype._invokeAll = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.unshift( this );\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tpending.push( func( extensions[ i ] ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMesh && ext.loadMesh( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadBufferView && ext.loadBufferView( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMaterial && ext.loadMaterial( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadTexture && ext.loadTexture( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar loader;\n\n\t\tif ( source.uri ) {\n\n\t\t\tloader = options.manager.getHandler( source.uri );\n\n\t\t}\n\n\t\tif ( ! loader ) {\n\n\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t: this.textureLoader;\n\n\t\t}\n\n\t\treturn this.loadTextureImage( textureIndex, source, loader );\n\n\t};\n\n\tGLTFParser.prototype.loadTextureImage = function ( textureIndex, source, loader ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tvar onLoad = resolve;\n\n\t\t\t\tif ( loader.isImageBitmapLoader === true ) {\n\n\t\t\t\t\tonLoad = function ( imageBitmap ) {\n\n\t\t\t\t\t\tresolve( new CanvasTexture( imageBitmap ) );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), onLoad, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\tparser.associations.set( texture, {\n\t\t\t\ttype: 'textures',\n\t\t\t\tindex: textureIndex\n\t\t\t} );\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tvar gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', geometry.attributes.uv );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\tGLTFParser.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn MeshStandardMaterial;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialType = this._invokeOne( function ( ext ) {\n\n\t\t\t\treturn ext.getMaterialType && ext.getMaterialType( materialIndex );\n\n\t\t\t} );\n\n\t\t\tpending.push( this._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.extendMaterialParams && ext.extendMaterialParams( materialIndex, materialParams );\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { type: 'materials', index: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See ._markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node = parser._getNodeRef( parser.meshCache, nodeDef.mesh, mesh );\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ).then( function ( camera ) {\n\n\t\t\t\t\treturn parser._getNodeRef( parser.cameraCache, nodeDef.camera, camera );\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tvar lightIndex = nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light;\n\n\t\t\t\tpending.push( parser.getDependency( 'light', lightIndex ).then( function ( light ) {\n\n\t\t\t\t\treturn parser._getNodeRef( parser.lightCache, lightIndex, light );\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See ._markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.associations.set( node, { type: 'nodes', index: nodeIndex } );\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"],"sourceRoot":""}