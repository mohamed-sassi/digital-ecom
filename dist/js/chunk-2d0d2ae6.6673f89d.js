(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d2ae6"],{"5a15":function(e,t,s){"use strict";s.r(t),s.d(t,"OBJLoader2",(function(){return l}));var i=s("5a89");const n=function(){this.logging={enabled:!1,debug:!1};let e=this;this.callbacks={onProgress:function(t){e._onProgress(t)},onAssetAvailable:function(t){e._onAssetAvailable(t)},onError:function(t){e._onError(t)},onLoad:function(t,s){e._onLoad(t,s)}},this.contentRef=null,this.legacyMode=!1,this.materials={},this.materialPerSmoothingGroup=!1,this.useOAsMesh=!1,this.useIndices=!1,this.disregardNormals=!1,this.vertices=[],this.colors=[],this.normals=[],this.uvs=[],this.rawMesh={objectName:"",groupName:"",activeMtlName:"",mtllibName:"",faceType:-1,subGroups:[],subGroupInUse:null,smoothingGroup:{splitMaterials:!1,normalized:-1,real:-1},counts:{doubleIndicesCount:0,faceCount:0,mtlCount:0,smoothingGroupCount:0}},this.inputObjectCount=1,this.outputObjectCount=1,this.globalCounts={vertices:0,faces:0,doubleIndicesCount:0,lineByte:0,currentByte:0,totalBytes:0}};n.prototype={constructor:n,_resetRawMesh:function(){this.rawMesh.subGroups=[],this.rawMesh.subGroupInUse=null,this.rawMesh.smoothingGroup.normalized=-1,this.rawMesh.smoothingGroup.real=-1,this._pushSmoothingGroup(1),this.rawMesh.counts.doubleIndicesCount=0,this.rawMesh.counts.faceCount=0,this.rawMesh.counts.mtlCount=0,this.rawMesh.counts.smoothingGroupCount=0},setMaterialPerSmoothingGroup:function(e){return this.materialPerSmoothingGroup=!0===e,this},setUseOAsMesh:function(e){return this.useOAsMesh=!0===e,this},setUseIndices:function(e){return this.useIndices=!0===e,this},setDisregardNormals:function(e){return this.disregardNormals=!0===e,this},setMaterials:function(e){this.materials=Object.assign({},e)},setCallbackOnAssetAvailable:function(e){return null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onAssetAvailable=e),this},setCallbackOnProgress:function(e){return null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onProgress=e),this},setCallbackOnError:function(e){return null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onError=e),this},setCallbackOnLoad:function(e){return null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onLoad=e),this},_onProgress:function(e){let t=e||"";this.logging.enabled&&this.logging.debug&&console.log(t)},_onError:function(e){this.logging.enabled&&this.logging.debug&&console.error(e)},_onAssetAvailable:function(e){let t="OBJLoader2Parser does not provide implementation for onAssetAvailable. Aborting...";throw this.callbacks.onError(t),t},_onLoad:function(e,t){console.log("You reached parser default onLoad callback: "+t)},setLogging:function(e,t){return this.logging.enabled=!0===e,this.logging.debug=!0===t,this},_configure:function(){if(this._pushSmoothingGroup(1),this.logging.enabled){let e=Object.keys(this.materials),t=e.length>0?"\n\tmaterialNames:\n\t\t- "+e.join("\n\t\t- "):"\n\tmaterialNames: None",s="OBJLoader.Parser configuration:"+t+"\n\tmaterialPerSmoothingGroup: "+this.materialPerSmoothingGroup+"\n\tuseOAsMesh: "+this.useOAsMesh+"\n\tuseIndices: "+this.useIndices+"\n\tdisregardNormals: "+this.disregardNormals;s+="\n\tcallbacks.onProgress: "+this.callbacks.onProgress.name,s+="\n\tcallbacks.onAssetAvailable: "+this.callbacks.onAssetAvailable.name,s+="\n\tcallbacks.onError: "+this.callbacks.onError.name,console.info(s)}},execute:function(e){this.logging.enabled&&console.time("OBJLoader2Parser.execute"),this._configure();let t=new Uint8Array(e);this.contentRef=t;let s=t.byteLength;this.globalCounts.totalBytes=s;let i=new Array(128),n=0,a=0,o="",r=0;for(let l,h=0;h<s;h++)switch(l=t[h],l){case 32:o.length>0&&(i[n++]=o),o="";break;case 47:o.length>0&&(i[n++]=o),a++,o="";break;case 10:this._processLine(i,n,a,o,h),o="",n=0,a=0;break;case 13:break;default:o+=String.fromCharCode(l);break}this._processLine(i,n,a,o,r),this._finalizeParsing(),this.logging.enabled&&console.timeEnd("OBJLoader2Parser.execute")},executeLegacy:function(e){this.logging.enabled&&console.time("OBJLoader2Parser.executeLegacy"),this._configure(),this.legacyMode=!0,this.contentRef=e;let t=e.length;this.globalCounts.totalBytes=t;let s,i=new Array(128),n=0,a=0,o="",r=0;for(;r<t;r++)switch(s=e[r],s){case" ":o.length>0&&(i[n++]=o),o="";break;case"/":o.length>0&&(i[n++]=o),a++,o="";break;case"\n":this._processLine(i,n,a,o,r),o="",n=0,a=0;break;case"\r":break;default:o+=s}this._processLine(i,n,o,a),this._finalizeParsing(),this.logging.enabled&&console.timeEnd("OBJLoader2Parser.executeLegacy")},_processLine:function(e,t,s,i,n){if(this.globalCounts.lineByte=this.globalCounts.currentByte,this.globalCounts.currentByte=n,t<1)return;i.length>0&&(e[t++]=i);let a,o,r,l,h=function(e,t,s,i){let n="";if(i>s){let a;if(t)for(a=s;a<i;a++)n+=e[a];else for(a=s;a<i;a++)n+=String.fromCharCode(e[a]);n=n.trim()}return n};switch(l=e[0],l){case"v":this.vertices.push(parseFloat(e[1])),this.vertices.push(parseFloat(e[2])),this.vertices.push(parseFloat(e[3])),t>4&&(this.colors.push(parseFloat(e[4])),this.colors.push(parseFloat(e[5])),this.colors.push(parseFloat(e[6])));break;case"vt":this.uvs.push(parseFloat(e[1])),this.uvs.push(parseFloat(e[2]));break;case"vn":this.normals.push(parseFloat(e[1])),this.normals.push(parseFloat(e[2])),this.normals.push(parseFloat(e[3]));break;case"f":if(a=t-1,0===s)for(this._checkFaceType(0),r=2,o=a;r<o;r++)this._buildFace(e[1]),this._buildFace(e[r]),this._buildFace(e[r+1]);else if(a===2*s)for(this._checkFaceType(1),r=3,o=a-2;r<o;r+=2)this._buildFace(e[1],e[2]),this._buildFace(e[r],e[r+1]),this._buildFace(e[r+2],e[r+3]);else if(2*a===3*s)for(this._checkFaceType(2),r=4,o=a-3;r<o;r+=3)this._buildFace(e[1],e[2],e[3]),this._buildFace(e[r],e[r+1],e[r+2]),this._buildFace(e[r+3],e[r+4],e[r+5]);else for(this._checkFaceType(3),r=3,o=a-2;r<o;r+=2)this._buildFace(e[1],void 0,e[2]),this._buildFace(e[r],void 0,e[r+1]),this._buildFace(e[r+2],void 0,e[r+3]);break;case"l":case"p":if(a=t-1,a===2*s)for(this._checkFaceType(4),r=1,o=a+1;r<o;r+=2)this._buildFace(e[r],e[r+1]);else for(this._checkFaceType("l"===l?5:6),r=1,o=a+1;r<o;r++)this._buildFace(e[r]);break;case"s":this._pushSmoothingGroup(e[1]);break;case"g":this._processCompletedMesh(),this.rawMesh.groupName=h(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case"o":this.useOAsMesh&&this._processCompletedMesh(),this.rawMesh.objectName=h(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case"mtllib":this.rawMesh.mtllibName=h(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);break;case"usemtl":let i=h(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);""!==i&&this.rawMesh.activeMtlName!==i&&(this.rawMesh.activeMtlName=i,this.rawMesh.counts.mtlCount++,this._checkSubGroup());break;default:break}},_pushSmoothingGroup:function(e){let t=parseInt(e);isNaN(t)&&(t="off"===e?0:1);let s=this.rawMesh.smoothingGroup.normalized;this.rawMesh.smoothingGroup.normalized=this.rawMesh.smoothingGroup.splitMaterials?t:0===t?0:1,this.rawMesh.smoothingGroup.real=t,s!==t&&(this.rawMesh.counts.smoothingGroupCount++,this._checkSubGroup())},_checkFaceType:function(e){this.rawMesh.faceType!==e&&(this._processCompletedMesh(),this.rawMesh.faceType=e,this._checkSubGroup())},_checkSubGroup:function(){let e=this.rawMesh.activeMtlName+"|"+this.rawMesh.smoothingGroup.normalized;this.rawMesh.subGroupInUse=this.rawMesh.subGroups[e],void 0!==this.rawMesh.subGroupInUse&&null!==this.rawMesh.subGroupInUse||(this.rawMesh.subGroupInUse={index:e,objectName:this.rawMesh.objectName,groupName:this.rawMesh.groupName,materialName:this.rawMesh.activeMtlName,smoothingGroup:this.rawMesh.smoothingGroup.normalized,vertices:[],indexMappingsCount:0,indexMappings:[],indices:[],colors:[],uvs:[],normals:[]},this.rawMesh.subGroups[e]=this.rawMesh.subGroupInUse)},_buildFace:function(e,t,s){let i=this.rawMesh.subGroupInUse,n=this,a=function(){let a=parseInt(e),o=3*(a>0?a-1:a+n.vertices.length/3),r=n.colors.length>0?o:null,l=i.vertices;if(l.push(n.vertices[o++]),l.push(n.vertices[o++]),l.push(n.vertices[o]),null!==r){let e=i.colors;e.push(n.colors[r++]),e.push(n.colors[r++]),e.push(n.colors[r])}if(t){let e=parseInt(t),s=2*(e>0?e-1:e+n.uvs.length/2),a=i.uvs;a.push(n.uvs[s++]),a.push(n.uvs[s])}if(s&&!n.disregardNormals){let e=parseInt(s),t=3*(e>0?e-1:e+n.normals.length/3),a=i.normals;a.push(n.normals[t++]),a.push(n.normals[t++]),a.push(n.normals[t])}};if(this.useIndices){this.disregardNormals&&(s=void 0);let n=e+(t?"_"+t:"_n")+(s?"_"+s:"_n"),o=i.indexMappings[n];void 0===o||null===o?(o=this.rawMesh.subGroupInUse.vertices.length/3,a(),i.indexMappings[n]=o,i.indexMappingsCount++):this.rawMesh.counts.doubleIndicesCount++,i.indices.push(o)}else a();this.rawMesh.counts.faceCount++},_createRawMeshReport:function(e){return"Input Object number: "+e+"\n\tObject name: "+this.rawMesh.objectName+"\n\tGroup name: "+this.rawMesh.groupName+"\n\tMtllib name: "+this.rawMesh.mtllibName+"\n\tVertex count: "+this.vertices.length/3+"\n\tNormal count: "+this.normals.length/3+"\n\tUV count: "+this.uvs.length/2+"\n\tSmoothingGroup count: "+this.rawMesh.counts.smoothingGroupCount+"\n\tMaterial count: "+this.rawMesh.counts.mtlCount+"\n\tReal MeshOutputGroup count: "+this.rawMesh.subGroups.length},_finalizeRawMesh:function(){let e,t,s=[],i=0,n=0,a=0,o=0,r=0,l=0;for(let u in this.rawMesh.subGroups)if(e=this.rawMesh.subGroups[u],e.vertices.length>0){if(t=e.indices,t.length>0&&n>0)for(let e=0;e<t.length;e++)t[e]=t[e]+n;s.push(e),i+=e.vertices.length,n+=e.indexMappingsCount,a+=e.indices.length,o+=e.colors.length,l+=e.uvs.length,r+=e.normals.length}let h=null;return s.length>0&&(h={name:""!==this.rawMesh.groupName?this.rawMesh.groupName:this.rawMesh.objectName,subGroups:s,absoluteVertexCount:i,absoluteIndexCount:a,absoluteColorCount:o,absoluteNormalCount:r,absoluteUvCount:l,faceCount:this.rawMesh.counts.faceCount,doubleIndicesCount:this.rawMesh.counts.doubleIndicesCount}),h},_processCompletedMesh:function(){let e=this._finalizeRawMesh(),t=null!==e;if(t){this.colors.length>0&&this.colors.length!==this.vertices.length&&this.callbacks.onError("Vertex Colors were detected, but vertex count and color count do not match!"),this.logging.enabled&&this.logging.debug&&console.debug(this._createRawMeshReport(this.inputObjectCount)),this.inputObjectCount++,this._buildMesh(e);let t=this.globalCounts.currentByte/this.globalCounts.totalBytes;this._onProgress("Completed [o: "+this.rawMesh.objectName+" g:"+this.rawMesh.groupName+"] Total progress: "+(100*t).toFixed(2)+"%"),this._resetRawMesh()}return t},_buildMesh:function(e){let t=e.subGroups,s=new Float32Array(e.absoluteVertexCount);this.globalCounts.vertices+=e.absoluteVertexCount/3,this.globalCounts.faces+=e.faceCount,this.globalCounts.doubleIndicesCount+=e.doubleIndicesCount;let i,n,a,o,r,l,h,u=e.absoluteIndexCount>0?new Uint32Array(e.absoluteIndexCount):null,c=e.absoluteColorCount>0?new Float32Array(e.absoluteColorCount):null,g=e.absoluteNormalCount>0?new Float32Array(e.absoluteNormalCount):null,d=e.absoluteUvCount>0?new Float32Array(e.absoluteUvCount):null,b=null!==c,m=[],p=t.length>1,f=0,M=[],v=[],w=0,C=0,k=0,y=0,A=0,_=0,N=0;for(let O in t)if(t.hasOwnProperty(O)){if(i=t[O],h=i.materialName,l=this.rawMesh.faceType<4?h+(b?"_vertexColor":"")+(0===i.smoothingGroup?"_flat":""):6===this.rawMesh.faceType?"defaultPointMaterial":"defaultLineMaterial",o=this.materials[h],r=this.materials[l],void 0!==o&&null!==o||void 0!==r&&null!==r||(l=b?"defaultVertexColorMaterial":"defaultMaterial",r=this.materials[l],this.logging.enabled&&console.info('object_group "'+i.objectName+"_"+i.groupName+'" was defined with unresolvable material "'+h+'"! Assigning "'+l+'".')),void 0===r||null===r){let e={materialNameOrg:h,materialName:l,materialProperties:{vertexColors:b?2:0,flatShading:0===i.smoothingGroup}},t={cmd:"assetAvailable",type:"material",materials:{materialCloneInstructions:e}};this.callbacks.onAssetAvailable(t);let s=this.materials[l];void 0!==s&&null!==s||(this.materials[l]=e)}if(p?(n=M[l],n||(n=f,M[l]=f,m.push(l),f++),N=this.useIndices?i.indices.length:i.vertices.length/3,a={start:_,count:N,index:n},v.push(a),_+=N):m.push(l),s.set(i.vertices,w),w+=i.vertices.length,u&&(u.set(i.indices,C),C+=i.indices.length),c&&(c.set(i.colors,k),k+=i.colors.length),g&&(g.set(i.normals,y),y+=i.normals.length),d&&(d.set(i.uvs,A),A+=i.uvs.length),this.logging.enabled&&this.logging.debug){let e="";n&&(e="\n\t\tmaterialIndex: "+n);let t="\tOutput Object no.: "+this.outputObjectCount+"\n\t\tgroupName: "+i.groupName+"\n\t\tIndex: "+i.index+"\n\t\tfaceType: "+this.rawMesh.faceType+"\n\t\tmaterialName: "+i.materialName+"\n\t\tsmoothingGroup: "+i.smoothingGroup+e+"\n\t\tobjectName: "+i.objectName+"\n\t\t#vertices: "+i.vertices.length/3+"\n\t\t#indices: "+i.indices.length+"\n\t\t#colors: "+i.colors.length/3+"\n\t\t#uvs: "+i.uvs.length/2+"\n\t\t#normals: "+i.normals.length/3;console.debug(t)}}this.outputObjectCount++,this.callbacks.onAssetAvailable({cmd:"assetAvailable",type:"mesh",progress:{numericalValue:this.globalCounts.currentByte/this.globalCounts.totalBytes},params:{meshName:e.name},materials:{multiMaterial:p,materialNames:m,materialGroups:v},buffers:{vertices:s,indices:u,colors:c,normals:g,uvs:d},geometryType:this.rawMesh.faceType<4?0:6===this.rawMesh.faceType?2:1},[s.buffer],null!==u?[u.buffer]:null,null!==c?[c.buffer]:null,null!==g?[g.buffer]:null,null!==d?[d.buffer]:null)},_finalizeParsing:function(){if(this.logging.enabled&&console.info("Global output object count: "+this.outputObjectCount),this._processCompletedMesh()&&this.logging.enabled){let e="Overall counts: \n\tVertices: "+this.globalCounts.vertices+"\n\tFaces: "+this.globalCounts.faces+"\n\tMultiple definitions: "+this.globalCounts.doubleIndicesCount;console.info(e)}}};const a=function(e){this.logging={enabled:!1,debug:!1},this.callbacks={onProgress:null,onMeshAlter:null},this.materialHandler=e};a.prototype={constructor:a,setLogging:function(e,t){this.logging.enabled=!0===e,this.logging.debug=!0===t},_setCallbacks:function(e,t){null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onProgress=e),null!==t&&void 0!==t&&t instanceof Function&&(this.callbacks.onMeshAlter=t)},buildMeshes:function(e){let t,s,n,a=e.params.meshName,o=e.buffers,r=new i["f"];void 0!==o.vertices&&null!==o.vertices&&r.setAttribute("position",new i["e"](new Float32Array(o.vertices),3)),void 0!==o.indices&&null!==o.indices&&r.setIndex(new i["e"](new Uint32Array(o.indices),1)),void 0!==o.colors&&null!==o.colors&&r.setAttribute("color",new i["e"](new Float32Array(o.colors),3)),void 0!==o.normals&&null!==o.normals?r.setAttribute("normal",new i["e"](new Float32Array(o.normals),3)):r.computeVertexNormals(),void 0!==o.uvs&&null!==o.uvs&&r.setAttribute("uv",new i["e"](new Float32Array(o.uvs),2)),void 0!==o.skinIndex&&null!==o.skinIndex&&r.setAttribute("skinIndex",new i["e"](new Uint16Array(o.skinIndex),4)),void 0!==o.skinWeight&&null!==o.skinWeight&&r.setAttribute("skinWeight",new i["e"](new Float32Array(o.skinWeight),4));let l=e.materials.materialNames,h=e.materials.multiMaterial,u=[];for(n in l)s=l[n],t=this.materialHandler.getMaterial(s),h&&u.push(t);if(h){t=u;let s,i=e.materials.materialGroups;for(n in i)s=i[n],r.addGroup(s.start,s.count,s.index)}let c,g,d=[],b=!0,m=null===e.geometryType?0:e.geometryType;if(this.callbacks.onMeshAlter&&(g=this.callbacks.onMeshAlter({detail:{meshName:a,bufferGeometry:r,material:t,geometryType:m}})),g)if(g.isDisregardMesh())b=!1;else if(g.providesAlteredMeshes()){for(let e in g.meshes)d.push(g.meshes[e]);b=!1}b&&(e.computeBoundingSphere&&r.computeBoundingSphere(),c=0===m?new i["Q"](r,t):1===m?new i["E"](r,t):new i["fb"](r,t),c.name=a,d.push(c));let p=e.params.meshName;if(d.length>0){let t=[];for(let e in d)c=d[e],t[e]=c.name;p+=": Adding mesh(es) ("+t.length+": "+t+") from input mesh: "+a,p+=" ("+(100*e.progress.numericalValue).toFixed(2)+"%)"}else p+=": Not adding mesh: "+a,p+=" ("+(100*e.progress.numericalValue).toFixed(2)+"%)";return this.callbacks.onProgress&&this.callbacks.onProgress("progress",p,e.progress.numericalValue),d}};const o=function(e,t){this.disregardMesh=!0===e,this.alteredMesh=!0===t,this.meshes=[]};o.prototype={constructor:o,addMesh:function(e){this.meshes.push(e),this.alteredMesh=!0},isDisregardMesh:function(){return this.disregardMesh},providesAlteredMeshes:function(){return this.alteredMesh}};const r=function(){this.logging={enabled:!1,debug:!1},this.callbacks={onLoadMaterials:null},this.materials={}};r.prototype={constructor:r,setLogging:function(e,t){this.logging.enabled=!0===e,this.logging.debug=!0===t},_setCallbacks:function(e){void 0!==e&&null!==e&&e instanceof Function&&(this.callbacks.onLoadMaterials=e)},createDefaultMaterials:function(e){let t=new i["V"]({color:14479871});t.name="defaultMaterial";let s=new i["V"]({color:14479871});s.name="defaultVertexColorMaterial",s.vertexColors=!0;let n=new i["C"];n.name="defaultLineMaterial";let a=new i["gb"]({size:.1});a.name="defaultPointMaterial";let o={};o[t.name]=t,o[s.name]=s,o[n.name]=n,o[a.name]=a,this.addMaterials(o,e)},addPayloadMaterials:function(e){let t,s,n=e.materials.materialCloneInstructions,a={};if(void 0!==n&&null!==n){let e=n.materialNameOrg;e=void 0!==e&&null!==e?e:"";let i=this.materials[e];i?(t=i.clone(),s=n.materialName,t.name=s,Object.assign(t,n.materialProperties),this.materials[s]=t,a[s]=t):this.logging.enabled&&console.info('Requested material "'+e+'" is not available!')}let o=e.materials.serializedMaterials;if(void 0!==o&&null!==o&&Object.keys(o).length>0){let e,n=new i["M"];for(s in o)e=o[s],void 0!==e&&null!==e&&(t=n.parse(e),this.logging.enabled&&console.info('De-serialized material with name "'+s+'" will be added.'),this.materials[s]=t,a[s]=t)}return o=e.materials.runtimeMaterials,a=this.addMaterials(o,!0,a),a},addMaterials:function(e,t,s){if(void 0!==s&&null!==s||(s={}),void 0!==e&&null!==e&&Object.keys(e).length>0){let i,n,a;for(let o in e)i=e[o],a=!0===t,a||(n=this.materials[o],a=null===n||void 0===n),a&&(this.materials[o]=i,s[o]=i),this.logging.enabled&&this.logging.debug&&console.info('Material with name "'+o+'" was added.')}return this.callbacks.onLoadMaterials&&this.callbacks.onLoadMaterials(s),s},getMaterials:function(){return this.materials},getMaterial:function(e){return this.materials[e]},getMaterialsJSON:function(){let e,t={};for(let s in this.materials)e=this.materials[s],t[s]=e.toJSON();return t},clearMaterials:function(){this.materials={}}};const l=function(e){i["I"].call(this,e),this.parser=new n,this.modelName="",this.instanceNo=0,this.baseObject3d=new i["bb"],this.materialHandler=new r,this.meshReceiver=new a(this.materialHandler);let t=this,s=function(e){t._onAssetAvailable(e)};this.parser.setCallbackOnAssetAvailable(s)};l.OBJLOADER2_VERSION="3.2.0",console.info("Using OBJLoader2 version: "+l.OBJLOADER2_VERSION),l.prototype=Object.assign(Object.create(i["I"].prototype),{constructor:l,setLogging:function(e,t){return this.parser.setLogging(e,t),this},setMaterialPerSmoothingGroup:function(e){return this.parser.setMaterialPerSmoothingGroup(e),this},setUseOAsMesh:function(e){return this.parser.setUseOAsMesh(e),this},setUseIndices:function(e){return this.parser.setUseIndices(e),this},setDisregardNormals:function(e){return this.parser.setDisregardNormals(e),this},setModelName:function(e){return this.modelName=e||this.modelName,this},setBaseObject3d:function(e){return this.baseObject3d=void 0===e||null===e?this.baseObject3d:e,this},addMaterials:function(e,t){return this.materialHandler.addMaterials(e,t),this},setCallbackOnAssetAvailable:function(e){return this.parser.setCallbackOnAssetAvailable(e),this},setCallbackOnProgress:function(e){return this.parser.setCallbackOnProgress(e),this},setCallbackOnError:function(e){return this.parser.setCallbackOnError(e),this},setCallbackOnLoad:function(e){return this.parser.setCallbackOnLoad(e),this},setCallbackOnMeshAlter:function(e){return this.meshReceiver._setCallbacks(this.parser.callbacks.onProgress,e),this},setCallbackOnLoadMaterials:function(e){return this.materialHandler._setCallbacks(e),this},load:function(e,t,s,n,a){let o=this;if(!(null!==t&&void 0!==t&&t instanceof Function)){let e="onLoad is not a function! Aborting...";throw o.parser.callbacks.onError(e),e}this.parser.setCallbackOnLoad(t),null!==n&&void 0!==n&&n instanceof Function||(n=function(e){let t=e;e.currentTarget&&null!==e.currentTarget.statusText&&(t="Error occurred while downloading!\nurl: "+e.currentTarget.responseURL+"\nstatus: "+e.currentTarget.statusText),o.parser.callbacks.onError(t)}),e||n("An invalid url was provided. Unable to continue!");let r=new URL(e,window.location.href).href,l=r,h=r.split("/");if(h.length>2&&(l=h[h.length-1],this.path=h.slice(0,h.length-1).join("/")+"/"),null===s||void 0===s||!(s instanceof Function)){let t=0,i=0;s=function(s){if(s.lengthComputable&&(i=s.loaded/s.total,i>t)){t=i;let s='Download of "'+e+'": '+(100*i).toFixed(2)+"%";o.parser.callbacks.onProgress("progressLoad",s,i)}}}this.setCallbackOnMeshAlter(a);let u=function(e){o.parser.callbacks.onLoad(o.parse(e),"OBJLoader2#load: Parsing completed")},c=new i["q"](this.manager);c.setPath(this.path||this.resourcePath),c.setResponseType("arraybuffer"),c.load(l,u,s,n)},parse:function(e){if(null===e||void 0===e)throw"Provided content is not a valid ArrayBuffer or String. Unable to continue parsing";return this.parser.logging.enabled&&console.time("OBJLoader parse: "+this.modelName),this.materialHandler.createDefaultMaterials(!1),this.parser.setMaterials(this.materialHandler.getMaterials()),e instanceof ArrayBuffer||e instanceof Uint8Array?(this.parser.logging.enabled&&console.info("Parsing arrayBuffer..."),this.parser.execute(e)):"string"===typeof e||e instanceof String?(this.parser.logging.enabled&&console.info("Parsing text..."),this.parser.executeLegacy(e)):this.parser.callbacks.onError("Provided content was neither of type String nor Uint8Array! Aborting..."),this.parser.logging.enabled&&console.timeEnd("OBJLoader parse: "+this.modelName),this.baseObject3d},_onAssetAvailable:function(e){if("assetAvailable"===e.cmd)if("mesh"===e.type){let t=this.meshReceiver.buildMeshes(e);for(let e of t)this.baseObject3d.add(e)}else"material"===e.type&&this.materialHandler.addPayloadMaterials(e)}})}}]);
//# sourceMappingURL=chunk-2d0d2ae6.6673f89d.js.map